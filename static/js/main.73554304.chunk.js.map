{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","inputValue","setInputValue","isSubmitted","setIsSubmitted","phoneNumberMap","setPhoneNumberMap","loading","setLoading","name","setName","a","fetch","res","json","jsonRes","useEffect","getData","CircularProgress","noValidate","autoComplete","onSubmit","e","preventDefault","TextField","type","id","label","onChange","target","value","IconButton","color","aria-label","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","className","document","getElementById"],"mappings":"oUAqFeA,MA9Ef,WAAgB,IAAD,EACuBC,mBAAS,IADhC,mBACNC,EADM,KACMC,EADN,OAEyBF,oBAAS,GAFlC,mBAENG,EAFM,KAEOC,EAFP,OAG+BJ,mBAAS,IAHxC,mBAGNK,EAHM,KAGUC,EAHV,OAIiBN,oBAAS,GAJ1B,mBAINO,EAJM,KAIGC,EAJH,OAKWR,mBAAS,MALpB,mBAKNS,EALM,KAKAC,EALA,iDAOb,8BAAAC,EAAA,6DACEH,GAAW,GADb,SAEoBI,MAAM,wBAF1B,cAEQC,EAFR,gBAGwBA,EAAIC,OAH5B,OAGQC,EAHR,OAKET,EAAkBS,GAClBP,GAAW,GANb,4CAPa,sBAsDb,OAtCAQ,qBAAU,YAhBG,mCAiBXC,KACC,IAoCCV,EACK,cAACW,EAAA,EAAD,IAIP,8BACE,uBAAMC,YAAU,EAACC,aAAa,MAAMC,SAxCxC,SAAsBC,GACpBA,EAAEC,iBACFb,EAAQL,EAAeJ,IACvBG,GAAe,IAqCb,UACE,cAACoB,EAAA,EAAD,CACEC,KAAK,SACLC,GAAG,iBACHC,MAAM,gBACNC,SAvCR,SAA2BN,GACzBlB,GAAe,GACfF,EAAcoB,EAAEO,OAAOC,QAsCjBA,MAAO7B,IAET,cAAC8B,EAAA,EAAD,CAAYN,KAAK,SAASO,MAAM,UAAUC,aAAW,SAArD,SACE,cAAC,IAAD,MArCD9B,GAAgBF,EAIjBQ,EAEA,8BACE,cAAC,IAAD,CAAWuB,MAAM,UADnB,mBAEkB,iCAAS/B,IAF3B,eAEyD,IACvD,iCAASQ,IAHX,yCASF,8BACE,cAAC,IAAD,CAAWyB,MAAO,CAAEF,MAAO,WAD7B,mBAC2D,IACzD,iCAAS/B,IAFX,2CAdO,WC5BEkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,sBAAKC,UAAU,MAAf,UACE,6EACA,8BACE,6CADF,gIAIA,cAAC,EAAD,SAGJC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.73554304.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { TextField, IconButton, CircularProgress } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ErrorIcon from \"@material-ui/icons/ErrorOutline\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport \"./App.css\";\n\nfunction App() {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [phoneNumberMap, setPhoneNumberMap] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [name, setName] = useState(null);\n\n  async function getData() {\n    setLoading(true);\n    const res = await fetch(\"./denmark-small.json\");\n    const jsonRes = await res.json();\n\n    setPhoneNumberMap(jsonRes);\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setName(phoneNumberMap[inputValue]);\n    setIsSubmitted(true);\n  }\n\n  function handleInputChange(e) {\n    setIsSubmitted(false);\n    setInputValue(e.target.value);\n  }\n\n  function renderResult() {\n    if (!isSubmitted || !inputValue) {\n      return null;\n    }\n\n    if (name) {\n      return (\n        <p>\n          <ErrorIcon color=\"error\" />\n          Telefonnummeret <strong>{inputValue}</strong> tilhører{\" \"}\n          <strong>{name}</strong> og er en del af Facebook lækket\n        </p>\n      );\n    }\n\n    return (\n      <p>\n        <CheckIcon style={{ color: \"green\" }} /> Telefonnummeret{\" \"}\n        <strong>{inputValue}</strong> er ikke en del af Facebook lækket\n      </p>\n    );\n  }\n\n  if (loading) {\n    return <CircularProgress />;\n  }\n\n  return (\n    <div>\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <TextField\n          type=\"number\"\n          id=\"standard-basic\"\n          label=\"Telefonnummer\"\n          onChange={handleInputChange}\n          value={inputValue}\n        />\n        <IconButton type=\"submit\" color=\"primary\" aria-label=\"Søg\">\n          <SearchIcon />\n        </IconButton>\n\n        {renderResult()}\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"app\">\n      <h1>Tjek om du optræder i Facebook lækket</h1>\n      <p>\n        <strong>639.841</strong> danskere optræder i datalækagen. Indtast dit\n        telefonnummer for at se om du er på. Dit telefonnummer gemmes IKKE.\n      </p>\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}